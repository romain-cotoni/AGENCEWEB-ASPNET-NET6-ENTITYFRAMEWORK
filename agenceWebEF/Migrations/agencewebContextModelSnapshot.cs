// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using agenceWebEF.Models;

#nullable disable

namespace agenceWebEF.Migrations
{
    [DbContext(typeof(agencewebContext))]
    partial class agencewebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("agenceWebEF.Models.Bd", b =>
                {
                    b.Property<int>("IdBd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_bd");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBd"), 1L, 1);

                    b.Property<bool?>("DonneesPrivesBd")
                        .HasColumnType("bit")
                        .HasColumnName("donneesPrives_bd");

                    b.Property<int?>("IdLic")
                        .HasColumnType("int")
                        .HasColumnName("id_lic");

                    b.Property<int>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("InfoBd")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_bd");

                    b.Property<string>("NomBd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_bd");

                    b.Property<bool?>("RgpdBd")
                        .HasColumnType("bit")
                        .HasColumnName("rgpd_bd");

                    b.Property<string>("TypeBd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_bd");

                    b.Property<string>("TypeDonneesBd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typeDonnees_bd");

                    b.HasKey("IdBd")
                        .HasName("PK__bd__00B7D116028F27CF");

                    b.HasIndex("IdLic");

                    b.HasIndex("IdPrj");

                    b.ToTable("bd");
                });

            modelBuilder.Entity("agenceWebEF.Models.Cm", b =>
                {
                    b.Property<int>("IdCms")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cms");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCms"), 1L, 1);

                    b.Property<string>("DebutCms")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_cms");

                    b.Property<int?>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("InfoCms")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_cms");

                    b.Property<string>("NomCms")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_cms");

                    b.Property<string>("TypeCms")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_cms");

                    b.Property<decimal?>("VersionCms")
                        .HasColumnType("decimal(6,3)")
                        .HasColumnName("version_cms");

                    b.HasKey("IdCms")
                        .HasName("PK__cms__D696612E9FC503F2");

                    b.HasIndex("IdPrj");

                    b.ToTable("cms");
                });

            modelBuilder.Entity("agenceWebEF.Models.Connexion", b =>
                {
                    b.Property<int>("IdCon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_con");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCon"), 1L, 1);

                    b.Property<int?>("IdBd")
                        .HasColumnType("int")
                        .HasColumnName("id_bd");

                    b.Property<int>("IdDrt")
                        .HasColumnType("int")
                        .HasColumnName("id_drt");

                    b.Property<int?>("IdEcm")
                        .HasColumnType("int")
                        .HasColumnName("id_ecm");

                    b.Property<string>("PassCon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pass_con");

                    b.Property<string>("UserCon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_con");

                    b.HasKey("IdCon")
                        .HasName("PK__connexio__D696717654F99157");

                    b.HasIndex("IdBd");

                    b.HasIndex("IdDrt");

                    b.HasIndex("IdEcm");

                    b.ToTable("connexion");
                });

            modelBuilder.Entity("agenceWebEF.Models.Coordonnee", b =>
                {
                    b.Property<int>("IdCrd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_crd");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCrd"), 1L, 1);

                    b.Property<string>("Adresse2Crd")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("adresse2_crd");

                    b.Property<string>("AdresseCrd")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("adresse_crd");

                    b.Property<string>("EmailCrd")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("email_crd");

                    b.Property<int?>("IdEtp")
                        .HasColumnType("int")
                        .HasColumnName("id_etp");

                    b.Property<int?>("IdPrs")
                        .HasColumnType("int")
                        .HasColumnName("id_prs");

                    b.Property<string>("PaysCrd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pays_crd");

                    b.Property<string>("PostalCrd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("postal_crd");

                    b.Property<string>("TelCrd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tel_crd");

                    b.Property<string>("VilleCrd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ville_crd");

                    b.HasKey("IdCrd")
                        .HasName("PK__coordonn__D69649DB7E622033");

                    b.HasIndex("IdEtp");

                    b.HasIndex("IdPrs");

                    b.ToTable("coordonnees");
                });

            modelBuilder.Entity("agenceWebEF.Models.Developpement", b =>
                {
                    b.Property<int>("IdDev")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_dev");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDev"), 1L, 1);

                    b.Property<string>("CommentDev")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("comment_dev");

                    b.Property<string>("DebutDev")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_dev");

                    b.Property<string>("DescripDev")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descrip_dev");

                    b.Property<string>("EmployeDev")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("employe_dev");

                    b.Property<short>("EtapeDev")
                        .HasColumnType("smallint")
                        .HasColumnName("etape_dev");

                    b.Property<string>("FinDev")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fin_dev");

                    b.Property<int?>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("InfoDev")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_dev");

                    b.Property<string>("LabelDev")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("label_dev");

                    b.HasKey("IdDev")
                        .HasName("PK__developp__D5EA6356EDCA74D0");

                    b.HasIndex("IdPrj");

                    b.ToTable("developpement");
                });

            modelBuilder.Entity("agenceWebEF.Models.Document", b =>
                {
                    b.Property<int>("IdDoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_doc");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoc"), 1L, 1);

                    b.Property<string>("CatDoc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cat_doc");

                    b.Property<int?>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("LabelDoc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("label_doc");

                    b.Property<string>("LienDoc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lien_doc");

                    b.HasKey("IdDoc")
                        .HasName("PK__document__D5EAB26C11DA2969");

                    b.HasIndex("IdPrj");

                    b.ToTable("document");
                });

            modelBuilder.Entity("agenceWebEF.Models.Domaine", b =>
                {
                    b.Property<int>("IdDmn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_dmn");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDmn"), 1L, 1);

                    b.Property<string>("DebutDmn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_dmn");

                    b.Property<string>("FinDmn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fin_dmn");

                    b.Property<int?>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("InfoDmn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("info_dmn");

                    b.Property<string>("NomDmn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_dmn");

                    b.Property<string>("RegistraireDmn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("registraire_dmn");

                    b.Property<decimal?>("TarifDmn")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("tarif_dmn");

                    b.HasKey("IdDmn")
                        .HasName("PK__domaine__D5EAA250D7727F93");

                    b.HasIndex("IdPrj");

                    b.ToTable("domaine");
                });

            modelBuilder.Entity("agenceWebEF.Models.Droit", b =>
                {
                    b.Property<int>("IdDrt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_drt");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDrt"), 1L, 1);

                    b.Property<byte>("TypeDrt")
                        .HasColumnType("tinyint")
                        .HasColumnName("type_drt");

                    b.HasKey("IdDrt")
                        .HasName("PK__droit__D5EACDEF34C503BB");

                    b.ToTable("droit");
                });

            modelBuilder.Entity("agenceWebEF.Models.Ecommerce", b =>
                {
                    b.Property<int>("IdEcm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ecm");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEcm"), 1L, 1);

                    b.Property<string>("ArticleEcm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("article_ecm");

                    b.Property<decimal?>("FixeVadEcm")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("fixeVad_ecm");

                    b.Property<int?>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("InfoEcm")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_ecm");

                    b.Property<short?>("NbArticleEcm")
                        .HasColumnType("smallint")
                        .HasColumnName("nbArticle_ecm");

                    b.Property<decimal?>("PourcentVadEcm")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("pourcentVad_ecm");

                    b.Property<string>("RestrictionEcm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("restriction_ecm");

                    b.Property<string>("TypeTarifVadEcm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typeTarifVad_ecm");

                    b.Property<string>("VadEcm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("vad_ecm");

                    b.HasKey("IdEcm")
                        .HasName("PK__ecommerc__D52A45A233F26AC2");

                    b.HasIndex("IdPrj");

                    b.ToTable("ecommerce");
                });

            modelBuilder.Entity("agenceWebEF.Models.Entreprise", b =>
                {
                    b.Property<int>("IdEtp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_etp");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEtp"), 1L, 1);

                    b.Property<string>("ActiviteEtp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("activite_etp");

                    b.Property<string>("NomEtp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_etp");

                    b.Property<string>("SiretEtp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("siret_etp");

                    b.HasKey("IdEtp")
                        .HasName("PK__entrepri__D52AEFD0F81E0DB1");

                    b.ToTable("entreprise");
                });

            modelBuilder.Entity("agenceWebEF.Models.Extension", b =>
                {
                    b.Property<int>("IdExt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ext");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExt"), 1L, 1);

                    b.Property<string>("DebutExt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_ext");

                    b.Property<int?>("IdLic")
                        .HasColumnType("int")
                        .HasColumnName("id_lic");

                    b.Property<string>("InfoExt")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_ext");

                    b.Property<string>("NomExt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_ext");

                    b.Property<string>("TypeExt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_ext");

                    b.Property<decimal?>("VersionExt")
                        .HasColumnType("decimal(6,3)")
                        .HasColumnName("version_ext");

                    b.HasKey("IdExt")
                        .HasName("PK__extensio__D52A8F51B8C61F01");

                    b.HasIndex("IdLic");

                    b.ToTable("extension");
                });

            modelBuilder.Entity("agenceWebEF.Models.Hebergement", b =>
                {
                    b.Property<int>("IdHeb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_heb");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHeb"), 1L, 1);

                    b.Property<string>("DebutHeb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_heb");

                    b.Property<string>("FinHeb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fin_heb");

                    b.Property<int?>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("InfoHeb")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_heb");

                    b.Property<string>("NomHeb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_heb");

                    b.Property<string>("TarifHeb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tarif_heb");

                    b.Property<string>("TypeHeb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_heb");

                    b.HasKey("IdHeb")
                        .HasName("PK__hebergem__D6EA62A1D0C1E418");

                    b.HasIndex("IdPrj");

                    b.ToTable("hebergement");
                });

            modelBuilder.Entity("agenceWebEF.Models.Langage", b =>
                {
                    b.Property<int>("IdLg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_lg");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLg"), 1L, 1);

                    b.Property<string>("NomLg")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_lg");

                    b.Property<decimal?>("VersionLg")
                        .HasColumnType("decimal(6,3)")
                        .HasColumnName("version_lg");

                    b.HasKey("IdLg")
                        .HasName("PK__langage__014883FEEA5557C5");

                    b.ToTable("langage");
                });

            modelBuilder.Entity("agenceWebEF.Models.Licence", b =>
                {
                    b.Property<int>("IdLic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_lic");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLic"), 1L, 1);

                    b.Property<string>("DureeLic")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("duree_lic");

                    b.Property<string>("NomLic")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_lic");

                    b.Property<decimal?>("TarifLic")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("tarif_lic");

                    b.Property<byte?>("TypeLic")
                        .HasColumnType("tinyint")
                        .HasColumnName("type_lic");

                    b.Property<string>("TypeTarifLic")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typeTarif_lic");

                    b.HasKey("IdLic")
                        .HasName("PK__licence__6CC822B3B7E3B77C");

                    b.ToTable("licence");
                });

            modelBuilder.Entity("agenceWebEF.Models.Maintenance", b =>
                {
                    b.Property<int>("IdMtn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_mtn");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMtn"), 1L, 1);

                    b.Property<string>("DebutMtn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_mtn");

                    b.Property<string>("DescripMtn")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descrip_mtn");

                    b.Property<string>("EmployeMtn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("employe_mtn");

                    b.Property<string>("FinMtn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fin_mtn");

                    b.Property<string>("InfoMtn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("info_mtn");

                    b.Property<string>("LabelMtn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("label_mtn");

                    b.Property<string>("TarifMtn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tarif_mtn");

                    b.Property<string>("TypeMtn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_mtn");

                    b.Property<string>("TypeTarifMtn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typeTarif_mtn");

                    b.HasKey("IdMtn")
                        .HasName("PK__maintena__6C898B5576B15EC2");

                    b.ToTable("maintenance");
                });

            modelBuilder.Entity("agenceWebEF.Models.ModuleCm", b =>
                {
                    b.Property<int>("IdMdl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_mdl");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMdl"), 1L, 1);

                    b.Property<string>("DebutMdl")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_mdl");

                    b.Property<int?>("IdCms")
                        .HasColumnType("int")
                        .HasColumnName("id_cms");

                    b.Property<int?>("IdLic")
                        .HasColumnType("int")
                        .HasColumnName("id_lic");

                    b.Property<string>("InfoMdl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_mdl");

                    b.Property<string>("NomMdl")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_mdl");

                    b.Property<string>("TypeModule")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_module");

                    b.Property<decimal?>("VersionMdl")
                        .HasColumnType("decimal(6,3)")
                        .HasColumnName("version_mdl");

                    b.HasKey("IdMdl")
                        .HasName("PK__moduleCm__6C8A0CDF396AE973");

                    b.HasIndex("IdCms");

                    b.HasIndex("IdLic");

                    b.ToTable("moduleCms");
                });

            modelBuilder.Entity("agenceWebEF.Models.O", b =>
                {
                    b.Property<int>("IdOs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_os");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOs"), 1L, 1);

                    b.Property<int?>("IdLic")
                        .HasColumnType("int")
                        .HasColumnName("id_lic");

                    b.Property<string>("NomOs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_os");

                    b.Property<string>("VersionOs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("version_os");

                    b.HasKey("IdOs")
                        .HasName("PK__os__0148BB697645A839");

                    b.HasIndex("IdLic");

                    b.ToTable("os");
                });

            modelBuilder.Entity("agenceWebEF.Models.Page", b =>
                {
                    b.Property<int>("IdPg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pg");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPg"), 1L, 1);

                    b.Property<string>("AdwordsPg")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("adwords_pg");

                    b.Property<int>("IdRef")
                        .HasColumnType("int")
                        .HasColumnName("id_ref");

                    b.Property<string>("LienPg")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lien_pg");

                    b.Property<string>("NomPg")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_pg");

                    b.Property<int?>("VisitePg")
                        .HasColumnType("int")
                        .HasColumnName("visite_pg");

                    b.HasKey("IdPg")
                        .HasName("PK__page__0148A345C2087800");

                    b.HasIndex("IdRef");

                    b.ToTable("page");
                });

            modelBuilder.Entity("agenceWebEF.Models.Personne", b =>
                {
                    b.Property<int>("IdPrs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_prs");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrs"), 1L, 1);

                    b.Property<string>("FonctionPrs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fonction_prs");

                    b.Property<int?>("IdCon")
                        .HasColumnType("int")
                        .HasColumnName("id_con");

                    b.Property<string>("NomPrs")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_prs");

                    b.Property<string>("PrenomPrs")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prenom_prs");

                    b.HasKey("IdPrs")
                        .HasName("PK__personne__6FC9A8683CB0E41F");

                    b.HasIndex("IdCon");

                    b.ToTable("personne");
                });

            modelBuilder.Entity("agenceWebEF.Models.Projet", b =>
                {
                    b.Property<int>("IdPrj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrj"), 1L, 1);

                    b.Property<string>("DebutPrj")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_prj");

                    b.Property<string>("DescripPrj")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descrip_prj");

                    b.Property<string>("FinPrj")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fin_prj");

                    b.Property<int?>("IdEtp")
                        .HasColumnType("int")
                        .HasColumnName("id_etp");

                    b.Property<string>("InfoPrj")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_prj");

                    b.Property<int?>("NbHeurePrj")
                        .HasColumnType("int")
                        .HasColumnName("nbHeure_prj");

                    b.Property<string>("NomPrj")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_prj");

                    b.Property<decimal?>("TFixePrj")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("tFixe_prj");

                    b.Property<decimal?>("THorairePrj")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("tHoraire_prj");

                    b.Property<string>("TypePrj")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_prj");

                    b.Property<string>("TypeTarifPrj")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typeTarif_prj");

                    b.HasKey("IdPrj")
                        .HasName("PK__projet__6FC9A853C66D09F2");

                    b.HasIndex("IdEtp");

                    b.ToTable("projet");
                });

            modelBuilder.Entity("agenceWebEF.Models.Referencement", b =>
                {
                    b.Property<int>("IdRef")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ref");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRef"), 1L, 1);

                    b.Property<string>("AdwordsRef")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("adwords_ref");

                    b.Property<string>("DebutRef")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("debut_ref");

                    b.Property<string>("FinRef")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fin_ref");

                    b.Property<int>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("InfoRef")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_ref");

                    b.Property<string>("NomRef")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_ref");

                    b.Property<byte?>("PositionRef")
                        .HasColumnType("tinyint")
                        .HasColumnName("position_ref");

                    b.Property<decimal?>("TarifRef")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("tarif_ref");

                    b.Property<string>("TypeTarif")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typeTarif");

                    b.Property<int?>("VisiteRef")
                        .HasColumnType("int")
                        .HasColumnName("visite_ref");

                    b.HasKey("IdRef")
                        .HasName("PK__referenc__6ABE6F0D1146F1FF");

                    b.HasIndex("IdPrj");

                    b.ToTable("referencement");
                });

            modelBuilder.Entity("agenceWebEF.Models.Store", b =>
                {
                    b.Property<int>("IdStr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_str");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStr"), 1L, 1);

                    b.Property<int?>("IdLic")
                        .HasColumnType("int")
                        .HasColumnName("id_lic");

                    b.Property<string>("NomStr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nom_str");

                    b.HasKey("IdStr")
                        .HasName("PK__store__6D6CDB07DD42524B");

                    b.HasIndex("IdLic");

                    b.ToTable("store");
                });

            modelBuilder.Entity("agenceWebEF.Models.Utilisateur", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("agenceWebEF.Models.Web", b =>
                {
                    b.Property<int>("IdWeb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_web");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWeb"), 1L, 1);

                    b.Property<string>("AriaWeb")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("aria_web");

                    b.Property<string>("ContenuWeb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contenu_web");

                    b.Property<bool?>("DaltonnienWeb")
                        .HasColumnType("bit")
                        .HasColumnName("daltonnien_web");

                    b.Property<string>("FormMailWeb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("formMail_web");

                    b.Property<int?>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<string>("InfoWeb")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("info_web");

                    b.Property<bool?>("MalvoyantWeb")
                        .HasColumnType("bit")
                        .HasColumnName("malvoyant_web");

                    b.Property<bool?>("ResponsiveWeb")
                        .HasColumnType("bit")
                        .HasColumnName("responsive_web");

                    b.Property<string>("RestrictionWeb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("restriction_web");

                    b.HasKey("IdWeb")
                        .HasName("PK__web__6C6DA99206071ABD");

                    b.HasIndex("IdPrj");

                    b.ToTable("web");
                });

            modelBuilder.Entity("Compiler", b =>
                {
                    b.Property<int>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<int>("IdOs")
                        .HasColumnType("int")
                        .HasColumnName("id_os");

                    b.HasKey("IdPrj", "IdOs")
                        .HasName("PK__compiler__EFDD23E5442BDA82");

                    b.HasIndex("IdOs");

                    b.ToTable("compiler", (string)null);
                });

            modelBuilder.Entity("EntreprisePersonne", b =>
                {
                    b.Property<int>("IdEtp")
                        .HasColumnType("int");

                    b.Property<int>("IdPrs")
                        .HasColumnType("int");

                    b.HasKey("IdEtp", "IdPrs");

                    b.ToTable("EntreprisePersonne");
                });

            modelBuilder.Entity("Etendre", b =>
                {
                    b.Property<int>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<int>("IdExt")
                        .HasColumnType("int")
                        .HasColumnName("id_ext");

                    b.HasKey("IdPrj", "IdExt")
                        .HasName("PK__etendre__629B00A63654450A");

                    b.HasIndex("IdExt");

                    b.ToTable("etendre", (string)null);
                });

            modelBuilder.Entity("ExtensionProjet", b =>
                {
                    b.Property<int>("IdExt")
                        .HasColumnType("int");

                    b.Property<int>("IdPrj")
                        .HasColumnType("int");

                    b.HasKey("IdExt", "IdPrj");

                    b.ToTable("ExtensionProjet");
                });

            modelBuilder.Entity("LangageProjet", b =>
                {
                    b.Property<int>("IdLg")
                        .HasColumnType("int");

                    b.Property<int>("IdPrj")
                        .HasColumnType("int");

                    b.HasKey("IdLg", "IdPrj");

                    b.ToTable("LangageProjet");
                });

            modelBuilder.Entity("MaintenanceProjet", b =>
                {
                    b.Property<int>("IdMtn")
                        .HasColumnType("int");

                    b.Property<int>("IdPrj")
                        .HasColumnType("int");

                    b.HasKey("IdMtn", "IdPrj");

                    b.ToTable("MaintenanceProjet");
                });

            modelBuilder.Entity("Maintenir", b =>
                {
                    b.Property<int>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<int>("IdMtn")
                        .HasColumnType("int")
                        .HasColumnName("id_mtn");

                    b.HasKey("IdPrj", "IdMtn")
                        .HasName("PK__mainteni__290130E6B689B375");

                    b.HasIndex("IdMtn");

                    b.ToTable("maintenir", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OProjet", b =>
                {
                    b.Property<int>("IdOs")
                        .HasColumnType("int");

                    b.Property<int>("IdPrj")
                        .HasColumnType("int");

                    b.HasKey("IdOs", "IdPrj");

                    b.ToTable("OProjet");
                });

            modelBuilder.Entity("ProjetLangage", b =>
                {
                    b.Property<int>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<int>("IdLg")
                        .HasColumnType("int")
                        .HasColumnName("id_lg");

                    b.HasKey("IdPrj", "IdLg")
                        .HasName("PK__projet_l__9FDD206C5B865E76");

                    b.HasIndex("IdLg");

                    b.ToTable("projet_langage", (string)null);
                });

            modelBuilder.Entity("ProjetStore", b =>
                {
                    b.Property<int>("IdPrj")
                        .HasColumnType("int");

                    b.Property<int>("IdStr")
                        .HasColumnType("int");

                    b.HasKey("IdPrj", "IdStr");

                    b.ToTable("ProjetStore");
                });

            modelBuilder.Entity("Representer", b =>
                {
                    b.Property<int>("IdPrs")
                        .HasColumnType("int")
                        .HasColumnName("id_prs");

                    b.Property<int>("IdEtp")
                        .HasColumnType("int")
                        .HasColumnName("id_etp");

                    b.HasKey("IdPrs", "IdEtp")
                        .HasName("PK__represen__729B0695D0303249");

                    b.HasIndex("IdEtp");

                    b.ToTable("representer", (string)null);
                });

            modelBuilder.Entity("Telecharger", b =>
                {
                    b.Property<int>("IdPrj")
                        .HasColumnType("int")
                        .HasColumnName("id_prj");

                    b.Property<int>("IdStr")
                        .HasColumnType("int")
                        .HasColumnName("id_str");

                    b.HasKey("IdPrj", "IdStr")
                        .HasName("PK__telechar__091F65E39ACE690E");

                    b.HasIndex("IdStr");

                    b.ToTable("telecharger", (string)null);
                });

            modelBuilder.Entity("agenceWebEF.Models.Bd", b =>
                {
                    b.HasOne("agenceWebEF.Models.Licence", "IdLicNavigation")
                        .WithMany("Bds")
                        .HasForeignKey("IdLic")
                        .HasConstraintName("FK__bd__id_lic__45F365D3");

                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Bds")
                        .HasForeignKey("IdPrj")
                        .IsRequired()
                        .HasConstraintName("FK__bd__id_prj__46E78A0C");

                    b.Navigation("IdLicNavigation");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Cm", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Cms")
                        .HasForeignKey("IdPrj")
                        .HasConstraintName("FK__cms__id_prj__3C69FB99");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Connexion", b =>
                {
                    b.HasOne("agenceWebEF.Models.Bd", "IdBdNavigation")
                        .WithMany("Connexions")
                        .HasForeignKey("IdBd")
                        .HasConstraintName("FK__connexion__id_bd__52593CB8");

                    b.HasOne("agenceWebEF.Models.Droit", "IdDrtNavigation")
                        .WithMany("Connexions")
                        .HasForeignKey("IdDrt")
                        .IsRequired()
                        .HasConstraintName("FK__connexion__id_dr__5441852A");

                    b.HasOne("agenceWebEF.Models.Ecommerce", "IdEcmNavigation")
                        .WithMany("Connexions")
                        .HasForeignKey("IdEcm")
                        .HasConstraintName("FK__connexion__id_ec__534D60F1");

                    b.Navigation("IdBdNavigation");

                    b.Navigation("IdDrtNavigation");

                    b.Navigation("IdEcmNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Coordonnee", b =>
                {
                    b.HasOne("agenceWebEF.Models.Entreprise", "IdEtpNavigation")
                        .WithMany("Coordonnees")
                        .HasForeignKey("IdEtp")
                        .HasConstraintName("FK__coordonne__id_et__628FA481");

                    b.HasOne("agenceWebEF.Models.Personne", "IdPrsNavigation")
                        .WithMany("Coordonnees")
                        .HasForeignKey("IdPrs")
                        .HasConstraintName("FK__coordonne__id_pr__6383C8BA");

                    b.Navigation("IdEtpNavigation");

                    b.Navigation("IdPrsNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Developpement", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Developpements")
                        .HasForeignKey("IdPrj")
                        .HasConstraintName("FK__developpe__id_pr__571DF1D5");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Document", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Documents")
                        .HasForeignKey("IdPrj")
                        .HasConstraintName("FK__document__id_prj__59FA5E80");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Domaine", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Domaines")
                        .HasForeignKey("IdPrj")
                        .HasConstraintName("FK__domaine__id_prj__4CA06362");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Ecommerce", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Ecommerces")
                        .HasForeignKey("IdPrj")
                        .HasConstraintName("FK__ecommerce__id_pr__4F7CD00D");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Extension", b =>
                {
                    b.HasOne("agenceWebEF.Models.Licence", "IdLicNavigation")
                        .WithMany("Extensions")
                        .HasForeignKey("IdLic")
                        .HasConstraintName("FK__extension__id_li__4316F928");

                    b.Navigation("IdLicNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Hebergement", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Hebergements")
                        .HasForeignKey("IdPrj")
                        .HasConstraintName("FK__hebergeme__id_pr__49C3F6B7");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.ModuleCm", b =>
                {
                    b.HasOne("agenceWebEF.Models.Cm", "IdCmsNavigation")
                        .WithMany("ModuleCms")
                        .HasForeignKey("IdCms")
                        .HasConstraintName("FK__moduleCms__id_cm__403A8C7D");

                    b.HasOne("agenceWebEF.Models.Licence", "IdLicNavigation")
                        .WithMany("ModuleCms")
                        .HasForeignKey("IdLic")
                        .HasConstraintName("FK__moduleCms__id_li__3F466844");

                    b.Navigation("IdCmsNavigation");

                    b.Navigation("IdLicNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.O", b =>
                {
                    b.HasOne("agenceWebEF.Models.Licence", "IdLicNavigation")
                        .WithMany("Os")
                        .HasForeignKey("IdLic")
                        .HasConstraintName("FK__os__id_lic__286302EC");

                    b.Navigation("IdLicNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Page", b =>
                {
                    b.HasOne("agenceWebEF.Models.Referencement", "IdRefNavigation")
                        .WithMany("Pages")
                        .HasForeignKey("IdRef")
                        .IsRequired()
                        .HasConstraintName("FK__page__id_ref__398D8EEE");

                    b.Navigation("IdRefNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Personne", b =>
                {
                    b.HasOne("agenceWebEF.Models.Connexion", "IdConNavigation")
                        .WithMany("Personnes")
                        .HasForeignKey("IdCon")
                        .HasConstraintName("FK__personne__id_con__5FB337D6");

                    b.Navigation("IdConNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Projet", b =>
                {
                    b.HasOne("agenceWebEF.Models.Entreprise", "IdEtpNavigation")
                        .WithMany("Projets")
                        .HasForeignKey("IdEtp")
                        .HasConstraintName("FK__projet__id_etp__33D4B598");

                    b.Navigation("IdEtpNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Referencement", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Referencements")
                        .HasForeignKey("IdPrj")
                        .IsRequired()
                        .HasConstraintName("FK__reference__id_pr__36B12243");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Store", b =>
                {
                    b.HasOne("agenceWebEF.Models.Licence", "IdLicNavigation")
                        .WithMany("Stores")
                        .HasForeignKey("IdLic")
                        .HasConstraintName("FK__store__id_lic__2B3F6F97");

                    b.Navigation("IdLicNavigation");
                });

            modelBuilder.Entity("agenceWebEF.Models.Web", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", "IdPrjNavigation")
                        .WithMany("Webs")
                        .HasForeignKey("IdPrj")
                        .HasConstraintName("FK__web__id_prj__5CD6CB2B");

                    b.Navigation("IdPrjNavigation");
                });

            modelBuilder.Entity("Compiler", b =>
                {
                    b.HasOne("agenceWebEF.Models.O", null)
                        .WithMany()
                        .HasForeignKey("IdOs")
                        .IsRequired()
                        .HasConstraintName("FK__compiler__id_os__6EF57B66");

                    b.HasOne("agenceWebEF.Models.Projet", null)
                        .WithMany()
                        .HasForeignKey("IdPrj")
                        .IsRequired()
                        .HasConstraintName("FK__compiler__id_prj__6E01572D");
                });

            modelBuilder.Entity("Etendre", b =>
                {
                    b.HasOne("agenceWebEF.Models.Extension", null)
                        .WithMany()
                        .HasForeignKey("IdExt")
                        .IsRequired()
                        .HasConstraintName("FK__etendre__id_ext__6754599E");

                    b.HasOne("agenceWebEF.Models.Projet", null)
                        .WithMany()
                        .HasForeignKey("IdPrj")
                        .IsRequired()
                        .HasConstraintName("FK__etendre__id_prj__66603565");
                });

            modelBuilder.Entity("Maintenir", b =>
                {
                    b.HasOne("agenceWebEF.Models.Maintenance", null)
                        .WithMany()
                        .HasForeignKey("IdMtn")
                        .IsRequired()
                        .HasConstraintName("FK__maintenir__id_mt__7A672E12");

                    b.HasOne("agenceWebEF.Models.Projet", null)
                        .WithMany()
                        .HasForeignKey("IdPrj")
                        .IsRequired()
                        .HasConstraintName("FK__maintenir__id_pr__797309D9");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("agenceWebEF.Models.Utilisateur", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("agenceWebEF.Models.Utilisateur", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agenceWebEF.Models.Utilisateur", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("agenceWebEF.Models.Utilisateur", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetLangage", b =>
                {
                    b.HasOne("agenceWebEF.Models.Langage", null)
                        .WithMany()
                        .HasForeignKey("IdLg")
                        .IsRequired()
                        .HasConstraintName("FK__projet_la__id_lg__6B24EA82");

                    b.HasOne("agenceWebEF.Models.Projet", null)
                        .WithMany()
                        .HasForeignKey("IdPrj")
                        .IsRequired()
                        .HasConstraintName("FK__projet_la__id_pr__6A30C649");
                });

            modelBuilder.Entity("Representer", b =>
                {
                    b.HasOne("agenceWebEF.Models.Entreprise", null)
                        .WithMany()
                        .HasForeignKey("IdEtp")
                        .IsRequired()
                        .HasConstraintName("FK__represent__id_et__76969D2E");

                    b.HasOne("agenceWebEF.Models.Personne", null)
                        .WithMany()
                        .HasForeignKey("IdPrs")
                        .IsRequired()
                        .HasConstraintName("FK__represent__id_pr__75A278F5");
                });

            modelBuilder.Entity("Telecharger", b =>
                {
                    b.HasOne("agenceWebEF.Models.Projet", null)
                        .WithMany()
                        .HasForeignKey("IdPrj")
                        .IsRequired()
                        .HasConstraintName("FK__telecharg__id_pr__71D1E811");

                    b.HasOne("agenceWebEF.Models.Store", null)
                        .WithMany()
                        .HasForeignKey("IdStr")
                        .IsRequired()
                        .HasConstraintName("FK__telecharg__id_st__72C60C4A");
                });

            modelBuilder.Entity("agenceWebEF.Models.Bd", b =>
                {
                    b.Navigation("Connexions");
                });

            modelBuilder.Entity("agenceWebEF.Models.Cm", b =>
                {
                    b.Navigation("ModuleCms");
                });

            modelBuilder.Entity("agenceWebEF.Models.Connexion", b =>
                {
                    b.Navigation("Personnes");
                });

            modelBuilder.Entity("agenceWebEF.Models.Droit", b =>
                {
                    b.Navigation("Connexions");
                });

            modelBuilder.Entity("agenceWebEF.Models.Ecommerce", b =>
                {
                    b.Navigation("Connexions");
                });

            modelBuilder.Entity("agenceWebEF.Models.Entreprise", b =>
                {
                    b.Navigation("Coordonnees");

                    b.Navigation("Projets");
                });

            modelBuilder.Entity("agenceWebEF.Models.Licence", b =>
                {
                    b.Navigation("Bds");

                    b.Navigation("Extensions");

                    b.Navigation("ModuleCms");

                    b.Navigation("Os");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("agenceWebEF.Models.Personne", b =>
                {
                    b.Navigation("Coordonnees");
                });

            modelBuilder.Entity("agenceWebEF.Models.Projet", b =>
                {
                    b.Navigation("Bds");

                    b.Navigation("Cms");

                    b.Navigation("Developpements");

                    b.Navigation("Documents");

                    b.Navigation("Domaines");

                    b.Navigation("Ecommerces");

                    b.Navigation("Hebergements");

                    b.Navigation("Referencements");

                    b.Navigation("Webs");
                });

            modelBuilder.Entity("agenceWebEF.Models.Referencement", b =>
                {
                    b.Navigation("Pages");
                });
#pragma warning restore 612, 618
        }
    }
}
